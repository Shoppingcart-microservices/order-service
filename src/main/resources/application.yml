spring:
  application:
    name: orderService
  config:
    import: configserver:http://localhost:9000
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-hj6kwec2hubzqrrk.eu.auth0.com/

  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

  datasource:
    url: jdbc:mysql://localhost:3306/orderdb
    username: kostas
    password: deko12345
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: health,info,env,metrics,prometheus,circuitbreakers
  endpoint:
    circuitbreakers:
      enabled: true

server:
  port: 8081

resilience4j:
  circuitbreaker:
    instances:
      ProductServicereduceQuantitylonglong:
        registerHealthIndicator: true
        slidingWindowSize: 10
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2s
        permittedNumberOfCallsInHalfOpenState: 5
        waitDurationInOpenState: 10s
      ProductServicegetProductByIdlong:
        registerHealthIndicator: true
        slidingWindowSize: 10
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2s
        permittedNumberOfCallsInHalfOpenState: 5
        waitDurationInOpenState: 10s
      PaymentServicegetPaymentDetailsByOrderIdlong:
        registerHealthIndicator: true
        slidingWindowSize: 10
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2s
        permittedNumberOfCallsInHalfOpenState: 5
        waitDurationInOpenState: 10s